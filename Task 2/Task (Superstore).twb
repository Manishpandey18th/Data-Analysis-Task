<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20243.24.1112.0850                               -->
<workbook original-version='18.1' source-build='2024.3.1 (20243.24.1112.0850)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Orders+ (Sample - Superstore)' inline='true' name='federated.0e447it1fkcoky1bmywbq042mqb7' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='Sample - Superstore' name='excel-direct.14vonv10o1h8i41chxrcp02i0y6m'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='D:/Data Analyst Evelate/Task 2/Sample - Superstore.xls' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation type='collection'>
          <relation connection='excel-direct.14vonv10o1h8i41chxrcp02i0y6m' name='Orders' table='[Orders$]' type='table'>
            <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
              <column datatype='integer' name='Row ID' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
              <column datatype='date' name='Order Date' ordinal='2' />
              <column datatype='date' name='Ship Date' ordinal='3' />
              <column datatype='string' name='Ship Mode' ordinal='4' />
              <column datatype='string' name='Customer ID' ordinal='5' />
              <column datatype='string' name='Customer Name' ordinal='6' />
              <column datatype='string' name='Segment' ordinal='7' />
              <column datatype='string' name='Country' ordinal='8' />
              <column datatype='string' name='City' ordinal='9' />
              <column datatype='string' name='State' ordinal='10' />
              <column datatype='integer' name='Postal Code' ordinal='11' />
              <column datatype='string' name='Region' ordinal='12' />
              <column datatype='string' name='Product ID' ordinal='13' />
              <column datatype='string' name='Category' ordinal='14' />
              <column datatype='string' name='Sub-Category' ordinal='15' />
              <column datatype='string' name='Product Name' ordinal='16' />
              <column datatype='real' name='Sales' ordinal='17' />
              <column datatype='integer' name='Quantity' ordinal='18' />
              <column datatype='real' name='Discount' ordinal='19' />
              <column datatype='real' name='Profit' ordinal='20' />
            </columns>
          </relation>
          <relation connection='excel-direct.14vonv10o1h8i41chxrcp02i0y6m' name='People' table='[People$]' type='table'>
            <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
              <column datatype='string' name='Person' ordinal='0' />
              <column datatype='string' name='Region' ordinal='1' />
            </columns>
          </relation>
          <relation connection='excel-direct.14vonv10o1h8i41chxrcp02i0y6m' name='Returns' table='[Returns$]' type='table'>
            <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
              <column datatype='string' name='Returned' ordinal='0' />
              <column datatype='string' name='Order ID' ordinal='1' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[Category]' value='[Orders].[Category]' />
          <map key='[City]' value='[Orders].[City]' />
          <map key='[Country]' value='[Orders].[Country]' />
          <map key='[Customer ID]' value='[Orders].[Customer ID]' />
          <map key='[Customer Name]' value='[Orders].[Customer Name]' />
          <map key='[Discount]' value='[Orders].[Discount]' />
          <map key='[Order Date]' value='[Orders].[Order Date]' />
          <map key='[Order ID (Returns)]' value='[Returns].[Order ID]' />
          <map key='[Order ID]' value='[Orders].[Order ID]' />
          <map key='[Person]' value='[People].[Person]' />
          <map key='[Postal Code]' value='[Orders].[Postal Code]' />
          <map key='[Product ID]' value='[Orders].[Product ID]' />
          <map key='[Product Name]' value='[Orders].[Product Name]' />
          <map key='[Profit]' value='[Orders].[Profit]' />
          <map key='[Quantity]' value='[Orders].[Quantity]' />
          <map key='[Region (People)]' value='[People].[Region]' />
          <map key='[Region]' value='[Orders].[Region]' />
          <map key='[Returned]' value='[Returns].[Returned]' />
          <map key='[Row ID]' value='[Orders].[Row ID]' />
          <map key='[Sales]' value='[Orders].[Sales]' />
          <map key='[Segment]' value='[Orders].[Segment]' />
          <map key='[Ship Date]' value='[Orders].[Ship Date]' />
          <map key='[Ship Mode]' value='[Orders].[Ship Mode]' />
          <map key='[State]' value='[Orders].[State]' />
          <map key='[Sub-Category]' value='[Orders].[Sub-Category]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Orders]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:U9995:no:A1:U9995:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[People]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B5:no:A1:B5:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Returns]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:B297:no:A1:B297:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>6</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Row ID</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Row ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Row ID</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Order Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Order Date</remote-alias>
            <ordinal>2</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Date</remote-name>
            <remote-type>7</remote-type>
            <local-name>[Ship Date]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Date</remote-alias>
            <ordinal>3</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ship Mode</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Ship Mode]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Ship Mode</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer ID</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>6</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Segment</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Segment]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Segment</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Country]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Country</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>City</remote-name>
            <remote-type>130</remote-type>
            <local-name>[City]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>City</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>State</remote-name>
            <remote-type>130</remote-type>
            <local-name>[State]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>State</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Postal Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Postal Code]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Postal Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product ID]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product ID</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sub-Category</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Sub-Category]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sub-Category</remote-alias>
            <ordinal>15</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product Name</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Product Name]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Product Name</remote-alias>
            <ordinal>16</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sales</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Sales]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Sales</remote-alias>
            <ordinal>17</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Quantity</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Quantity]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Quantity</remote-alias>
            <ordinal>18</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Discount</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Discount]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Discount</remote-alias>
            <ordinal>19</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[Orders]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>20</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
            <object-id>[Orders_3C399252D8E3458AB45052413B986B3D]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Person</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Person]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Person</remote-alias>
            <ordinal>21</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_82E75A6128934C9890399E4CF3E20A08]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Region</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Region (People)]</local-name>
            <parent-name>[People]</parent-name>
            <remote-alias>Region</remote-alias>
            <ordinal>22</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[People_82E75A6128934C9890399E4CF3E20A08]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Returned</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Returned]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Returned</remote-alias>
            <ordinal>23</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_D11F4F8C3C9D4AB29E8731A4A3FFC62E]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Order ID (Returns)]</local-name>
            <parent-name>[Returns]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>24</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LEN_RUS_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
            <object-id>[Returns_D11F4F8C3C9D4AB29E8731A4A3FFC62E]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column datatype='string' name='[Country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal' />
      <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Postal Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
      <column datatype='string' name='[Region]' role='dimension' type='nominal' />
      <column datatype='integer' name='[Row ID]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
      <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column caption='Orders' datatype='table' name='[__tableau_internal_object_id__].[Orders_3C399252D8E3458AB45052413B986B3D]' role='measure' type='quantitative' />
      <column caption='People' datatype='table' name='[__tableau_internal_object_id__].[People_82E75A6128934C9890399E4CF3E20A08]' role='measure' type='quantitative' />
      <column caption='Returns' datatype='table' name='[__tableau_internal_object_id__].[Returns_D11F4F8C3C9D4AB29E8731A4A3FFC62E]' role='measure' type='quantitative' />
      <column-instance column='[City]' derivation='None' name='[none:City:nk]' pivot='key' type='nominal' />
      <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
      <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:2]' pivot='key' type='quantitative'>
        <table-calc ordering-field='[federated.0e447it1fkcoky1bmywbq042mqb7].[Customer Name]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk]' pivot='key' type='quantitative'>
        <table-calc ordering-type='Columns' rank-options='Competition,Descending' type='Rank' />
      </column-instance>
      <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:City:nk]' type='palette'>
            <map to='#499894'>
              <bucket>&quot;Amarillo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Baltimore&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Bozeman&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cary&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Clinton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Cuyahoga Falls&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Durham&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Fargo&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Glendale&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Hampton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Huntington Beach&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Knoxville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Lawton&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Loveland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Melbourne&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Monroe&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Rochelle&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Omaha&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Pearland&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Portage&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Rio Rancho&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Saint Peters&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Santa Clara&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Summerville&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Troy&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Watertown&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;York&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Aberdeen&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Athens&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Billings&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Burlington&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Chicago&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Coppell&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Denver&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Elyria&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Frisco&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Greenwood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Hillsboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Jonesboro&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lakewood&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Lodi&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Marietta&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Minneapolis&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Muskogee&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Norwich&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Palm Coast&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Plantation&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Redmond&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Round Rock&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;San Jose&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Southaven&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Thomasville&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Virginia Beach&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Wichita&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Alexandria&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Aurora&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Bolingbrook&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Canton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Citrus Heights&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Costa Mesa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Dover&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Eugene&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Gastonia&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Hackensack&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Homestead&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Kenosha&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Las Cruces&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Longview&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Mason&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Missoula&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;New Albany&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Odessa&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pasadena&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Pompano Beach&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Renton&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Saint Charles&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Sandy Springs&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Springfield&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Tinley Park&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Warwick&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Woodland&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Antioch&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Baytown&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Broken Arrow&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Chandler&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Colorado Springs&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Davis&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Eau Claire&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Fort Collins&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Grand Prairie&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Helena&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Inglewood&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;La Quinta&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Lehi&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Madison&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Meridian&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Moreno Valley&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Niagara Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Orland Park&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Perth Amboy&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Pueblo&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Rock Hill&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Salt Lake City&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Seattle&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Tamarac&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Twin Falls&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;West Allis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Anaheim&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Bangor&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Brentwood&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Cedar Hill&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Clovis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Dallas&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Eagan&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Farmington&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Glenview&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Harlingen&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Huntsville&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;La Crosse&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Layton&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Lowell&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Memphis&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Montebello&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New York City&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Ontario&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Pembroke Pines&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Portland&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Riverside&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Saint Petersburg&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Santa Fe&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Sunnyvale&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Tucson&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Waukesha&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Yucaipa&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Allen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Austin&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Bossier City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Carlsbad&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Clarksville&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Cottage Grove&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Draper&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Evanston&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Georgetown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hagerstown&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Hoover&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Kent&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Las Vegas&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Lorain&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Mcallen&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Missouri City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;New Bedford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Oklahoma City&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Pasco&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Port Arthur&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Revere&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Saint Cloud&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sanford&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Sterling Heights&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Toledo&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Woodstock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Arvada&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bethlehem&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Bullhead City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Chester&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Conway&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Delray Beach&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Elkhart&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Fremont&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Greensboro&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Hickory&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Jefferson City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Lakeland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Little Rock&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maple Grove&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Milford&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Murray&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;North Las Vegas&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Oxnard&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Plainfield&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Redding&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Roseville&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;San Francisco&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Smyrna&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Texas City&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Vancouver&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Wheeling&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Abilene&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Atlanta&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Bloomington&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Caldwell&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Chico&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Coral Gables&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Des Moines&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Encinitas&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gaithersburg&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Gresham&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Holland&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Jupiter&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Lancaster&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Logan&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Marion&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Miramar&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Naperville&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Oak Park&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Park Ridge&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Pleasant Grove&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Redondo Beach&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Royal Oak&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;San Luis Obispo&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Sparks&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Thornton&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Visalia&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Wilmington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Arlington&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Bellevue&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Buffalo&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Chattanooga&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Concord&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Decatur&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;El Cajon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Franklin&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Greeley&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Hesperia&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Jacksonville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Lake Elsinore&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Linden&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mansfield&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Middletown&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Mount Vernon&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Norman&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Overland Park&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Pico Rivera&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rapid City&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Rome&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;San Clemente&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Sioux Falls&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Tempe&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Vacaville&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Westland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Allentown&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Avondale&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Bowling Green&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Carol Stream&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Cleveland&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Covington&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Dublin&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Everett&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Gilbert&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Haltom City&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Hot Springs&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Kirkwood&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Laurel&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Los Angeles&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Medford&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Mobile&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;New Brunswick&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Olathe&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Passaic&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Port Orange&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Richardson&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Saint Louis&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Santa Ana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Stockton&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Torrance&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Waterbury&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Woonsocket&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Apopka&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Beaumont&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Broomfield&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Chapel Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Columbia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Daytona Beach&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Edinburg&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Fort Lauderdale&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Grand Rapids&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Hempstead&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa City&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Lafayette&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Leominster&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Malden&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Mesa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Morgan Hill&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Noblesville&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Orlando&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Pharr&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Quincy&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Rockford&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;San Angelo&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Sheboygan&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tampa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Tyler&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;West Jordan&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Apple Valley&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Bedford&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Brownsville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Charlotte&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Columbus&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Dearborn&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Edmond&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Fort Worth&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Grapevine&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Henderson&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Irving&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Laguna Niguel&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Lewiston&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Manchester&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Mesquite&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Morristown&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Norfolk&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Ormond Beach&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Philadelphia&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Raleigh&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Rockville&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;San Antonio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Shelton&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Taylor&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Urbandale&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;West Palm Beach&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Arlington Heights&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Bellingham&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Buffalo Grove&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Chesapeake&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Conroe&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Deer Park&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;El Paso&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Freeport&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Green Bay&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Hialeah&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Jamestown&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lake Forest&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Lindenhurst&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Manteca&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Midland&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Murfreesboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;North Charleston&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Owensboro&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Pine Bluff&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Reading&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Romeoville&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;San Diego&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Skokie&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Texarkana&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Vallejo&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Westminster&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Asheville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Beverly&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Burbank&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Cheyenne&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Coon Rapids&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Deltona&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Elmhurst&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Fresno&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Greenville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Highland Park&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Johnson City&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Lakeville&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Littleton&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Margate&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Milwaukee&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Murrieta&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;North Miami&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Palatine&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Plano&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Redlands&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Roswell&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;San Gabriel&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Bend&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;The Colony&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Vineland&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Whittier&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Andover&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bartlett&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Bridgeton&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Cedar Rapids&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Coachella&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Danbury&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Fayetteville&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Goldsboro&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Harrisonburg&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Independence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;La Mesa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;League City&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Lubbock&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Mentor&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Montgomery&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Newark&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Orange&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Pensacola&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Providence&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Rochester&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Salem&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Santa Maria&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Superior&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Tulsa&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Wausau&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Yuma&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Altoona&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Bakersfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Boynton Beach&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Carrollton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Clifton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Cranston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Dubuque&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Fairfield&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Gladstone&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Hamilton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Houston&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Kissimmee&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Lawrence&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Louisville&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Medina&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Modesto&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Castle&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Olympia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Paterson&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Port Saint Lucie&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Richmond&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Saint Paul&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Santa Barbara&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Suffolk&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Trenton&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Waterloo&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Yonkers&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Akron&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Atlantic City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Boca Raton&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Camarillo&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Chula Vista&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Coral Springs&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Des Plaines&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Englewood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Garden City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Grove City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Hollywood&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Keller&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Lansing&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Long Beach&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Marlborough&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mishawaka&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Nashua&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Oakland&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Parker&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Pocatello&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Redwood City&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Sacramento&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;San Marcos&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Spokane&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Thousand Oaks&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Waco&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Wilson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Appleton&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Belleville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Bryan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Charlottesville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Commerce City&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Dearborn Heights&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Edmonds&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Frankfort&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Great Falls&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Hendersonville&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Jackson&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lake Charles&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Lincoln Park&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Manhattan&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Miami&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Mount Pleasant&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Normal&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oswego&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Phoenix&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rancho Cucamonga&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Rogers&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;San Bernardino&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Sierra Vista&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Temecula&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Utica&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Westfield&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Ann Arbor&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bayonne&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Bristol&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Champaign&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;College Station&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Danville&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;East Point&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Florence&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Grand Island&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Hattiesburg&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Indianapolis&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;La Porte&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Lebanon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Macon&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Meriden&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Moorhead&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Newport News&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Orem&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Peoria&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Provo&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Rochester Hills&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Salinas&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Scottsdale&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tallahassee&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Tuscaloosa&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Waynesboro&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Albuquerque&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Auburn&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Boise&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cambridge&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Cincinnati&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Corpus Christi&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Detroit&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Escondido&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Garland&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Gulfport&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Holyoke&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Kenner&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Laredo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Longmont&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Marysville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Mission Viejo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Nashville&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Oceanside&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Parma&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Pomona&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Reno&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Saginaw&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;San Mateo&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Springdale&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Tigard&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Warner Robins&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Woodbury&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:State:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;California&quot;</bucket>
            </map>
            <map to='#2ca02c'>
              <bucket>&quot;Washington&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Florida&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;New Jersey&quot;</bucket>
            </map>
            <map to='#499894'>
              <bucket>&quot;Wyoming&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Alabama&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Michigan&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;Tennessee&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Colorado&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Montana&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;Virginia&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;Indiana&quot;</bucket>
            </map>
            <map to='#79706e'>
              <bucket>&quot;North Dakota&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;Georgia&quot;</bucket>
            </map>
            <map to='#86bcb6'>
              <bucket>&quot;New Mexico&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Connecticut&quot;</bucket>
            </map>
            <map to='#8cd17d'>
              <bucket>&quot;Nebraska&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;Maryland&quot;</bucket>
            </map>
            <map to='#9d7660'>
              <bucket>&quot;South Carolina&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Arizona&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;Minnesota&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;New York&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;Louisiana&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Delaware&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;Nevada&quot;</bucket>
            </map>
            <map to='#b6992d'>
              <bucket>&quot;West Virginia&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Iowa&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;Ohio&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Kansas&quot;</bucket>
            </map>
            <map to='#d37295'>
              <bucket>&quot;Oklahoma&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Maine&quot;</bucket>
            </map>
            <map to='#d4a6c8'>
              <bucket>&quot;Rhode Island&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;Massachusetts&quot;</bucket>
            </map>
            <map to='#d7b5a6'>
              <bucket>&quot;South Dakota&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Idaho&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;District of Columbia&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;New Hampshire&quot;</bucket>
            </map>
            <map to='#f1ce63'>
              <bucket>&quot;Wisconsin&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Arkansas&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Mississippi&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Utah&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Kentucky&quot;</bucket>
            </map>
            <map to='#fabfd2'>
              <bucket>&quot;Oregon&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;Pennsylvania&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;Illinois&quot;</bucket>
            </map>
            <map to='#ff9d9a'>
              <bucket>&quot;North Carolina&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;Texas&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Missouri&quot;</bucket>
            </map>
            <map to='#ffbe7d'>
              <bucket>&quot;Vermont&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' palette='blue_10_0' type='palette'>
            <map to='#2a5783'>
              <bucket>&quot;[federated.0e447it1fkcoky1bmywbq042mqb7].[rank:sum:Sales:qk:2]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.0e447it1fkcoky1bmywbq042mqb7].[rank:sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#2a5783'>
              <bucket>&quot;[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Discount:qk]&quot;</bucket>
            </map>
            <map to='#a3acb9'>
              <bucket>&quot;[federated.0e447it1fkcoky1bmywbq042mqb7]&quot;</bucket>
            </map>
            <map to='#b9ddf1'>
              <bucket>&quot;[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Profit:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Region:nk]' palette='tableau-20' type='palette'>
            <map to='#1f77b4'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#aec7e8'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#ff7f0e'>
              <bucket>&quot;South&quot;</bucket>
            </map>
            <map to='#ffbb78'>
              <bucket>&quot;West&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <object-graph>
        <objects>
          <object caption='Orders' id='Orders_3C399252D8E3458AB45052413B986B3D'>
            <properties context=''>
              <relation connection='excel-direct.14vonv10o1h8i41chxrcp02i0y6m' name='Orders' table='[Orders$]' type='table'>
                <columns gridOrigin='A1:U9995:no:A1:U9995:0' header='yes' outcome='6'>
                  <column datatype='integer' name='Row ID' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                  <column datatype='date' name='Order Date' ordinal='2' />
                  <column datatype='date' name='Ship Date' ordinal='3' />
                  <column datatype='string' name='Ship Mode' ordinal='4' />
                  <column datatype='string' name='Customer ID' ordinal='5' />
                  <column datatype='string' name='Customer Name' ordinal='6' />
                  <column datatype='string' name='Segment' ordinal='7' />
                  <column datatype='string' name='Country' ordinal='8' />
                  <column datatype='string' name='City' ordinal='9' />
                  <column datatype='string' name='State' ordinal='10' />
                  <column datatype='integer' name='Postal Code' ordinal='11' />
                  <column datatype='string' name='Region' ordinal='12' />
                  <column datatype='string' name='Product ID' ordinal='13' />
                  <column datatype='string' name='Category' ordinal='14' />
                  <column datatype='string' name='Sub-Category' ordinal='15' />
                  <column datatype='string' name='Product Name' ordinal='16' />
                  <column datatype='real' name='Sales' ordinal='17' />
                  <column datatype='integer' name='Quantity' ordinal='18' />
                  <column datatype='real' name='Discount' ordinal='19' />
                  <column datatype='real' name='Profit' ordinal='20' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='People' id='People_82E75A6128934C9890399E4CF3E20A08'>
            <properties context=''>
              <relation connection='excel-direct.14vonv10o1h8i41chxrcp02i0y6m' name='People' table='[People$]' type='table'>
                <columns gridOrigin='A1:B5:no:A1:B5:0' header='yes' outcome='6'>
                  <column datatype='string' name='Person' ordinal='0' />
                  <column datatype='string' name='Region' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='Returns' id='Returns_D11F4F8C3C9D4AB29E8731A4A3FFC62E'>
            <properties context=''>
              <relation connection='excel-direct.14vonv10o1h8i41chxrcp02i0y6m' name='Returns' table='[Returns$]' type='table'>
                <columns gridOrigin='A1:B297:no:A1:B297:0' header='yes' outcome='6'>
                  <column datatype='string' name='Returned' ordinal='0' />
                  <column datatype='string' name='Order ID' ordinal='1' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Region]' />
              <expression op='[Region (People)]' />
            </expression>
            <first-end-point object-id='Orders_3C399252D8E3458AB45052413B986B3D' />
            <second-end-point object-id='People_82E75A6128934C9890399E4CF3E20A08' />
          </relationship>
          <relationship>
            <expression op='='>
              <expression op='[Order ID]' />
              <expression op='[Order ID (Returns)]' />
            </expression>
            <first-end-point object-id='Orders_3C399252D8E3458AB45052413B986B3D' />
            <second-end-point object-id='Returns_D11F4F8C3C9D4AB29E8731A4A3FFC62E' />
          </relationship>
        </relationships>
      </object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <worksheets>
    <worksheet name='Card1'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='16'>Total Profit</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0e447it1fkcoky1bmywbq042mqb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0e447it1fkcoky1bmywbq042mqb7'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Profit:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DDC66563-7CD8-4ED8-BA29-A9D8271D677C}' />
    </worksheet>
    <worksheet name='Card2'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='16'>Total Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0e447it1fkcoky1bmywbq042mqb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0e447it1fkcoky1bmywbq042mqb7'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{DA3CF84B-E754-403C-BB87-60A4CFA50876}' />
    </worksheet>
    <worksheet name='Card3'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='16'>Total Discount</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0e447it1fkcoky1bmywbq042mqb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0e447it1fkcoky1bmywbq042mqb7'>
            <column datatype='real' name='[Discount]' role='measure' type='quantitative' />
            <column-instance column='[Discount]' derivation='Sum' name='[sum:Discount:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Discount:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{CF881FF2-9C86-4478-B6E1-A0F42261468B}' />
    </worksheet>
    <worksheet name='Card4'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontsize='16'>Total Quantity</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0e447it1fkcoky1bmywbq042mqb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0e447it1fkcoky1bmywbq042mqb7'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Quantity:qk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
                <format attr='wrap' value='off' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{BE366A61-207F-4DA5-9E76-AAB6BE2A454E}' />
    </worksheet>
    <worksheet name='Category Sales and Profit Comparison'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0e447it1fkcoky1bmywbq042mqb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0e447it1fkcoky1bmywbq042mqb7'>
            <column datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e447it1fkcoky1bmywbq042mqb7].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]&quot;' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e447it1fkcoky1bmywbq042mqb7].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='auto-subtitle' class='0' field='[federated.0e447it1fkcoky1bmywbq042mqb7].[Multiple Values]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0e447it1fkcoky1bmywbq042mqb7].[Multiple Values]' scope='rows' value='' />
            <format attr='width' field='[federated.0e447it1fkcoky1bmywbq042mqb7].[Multiple Values]' value='56' />
          </style-rule>
          <style-rule element='header'>
            <format attr='height' field='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Category:nk]' value='12' />
          </style-rule>
          <style-rule element='table'>
            <format attr='alternate-text' field='[federated.0e447it1fkcoky1bmywbq042mqb7].[Multiple Values]' value='' />
            <format attr='display-alternate-text' field='[federated.0e447it1fkcoky1bmywbq042mqb7].[Multiple Values]' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e447it1fkcoky1bmywbq042mqb7].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0e447it1fkcoky1bmywbq042mqb7].[Multiple Values]</rows>
        <cols>([federated.0e447it1fkcoky1bmywbq042mqb7].[none:Category:nk] / [federated.0e447it1fkcoky1bmywbq042mqb7].[:Measure Names])</cols>
      </table>
      <simple-id uuid='{A0952396-3985-4F1F-9E3D-2CF1231016E1}' />
    </worksheet>
    <worksheet name='State by profit'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>&lt;Sheet Name&gt;</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0e447it1fkcoky1bmywbq042mqb7' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='federated.0e447it1fkcoky1bmywbq042mqb7'>
            <column datatype='real' name='[Profit]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='legend-title-text'>
            <format attr='color' field='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Profit:qk]' value='Profit'>
              <formatted-text>
                <run fontalignment='1'>Profit</run>
              </formatted-text>
            </format>
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='0.0' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Profit:qk]' />
              <lod column='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:State:nk]' />
              <lod column='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:State:nk]' />
              <geometry column='[federated.0e447it1fkcoky1bmywbq042mqb7].[Geometry (generated)]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0e447it1fkcoky1bmywbq042mqb7].[Latitude (generated)]</rows>
        <cols>[federated.0e447it1fkcoky1bmywbq042mqb7].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{45B457D3-B0C9-4192-9EB7-97E12EAE3FDD}' />
    </worksheet>
    <worksheet name='Sub-Category Quantity by Region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Sub-Category Quantity by Region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0e447it1fkcoky1bmywbq042mqb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0e447it1fkcoky1bmywbq042mqb7'>
            <column datatype='integer' name='[Quantity]' role='measure' type='quantitative' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='string' name='[Sub-Category]' role='dimension' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sub-Category]' derivation='None' name='[none:Sub-Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Quantity]' derivation='Sum' name='[sum:Quantity:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Quantity:qk]</rows>
        <cols>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Sub-Category:nk]</cols>
      </table>
      <simple-id uuid='{DAB6F80B-A07C-433D-AD17-899982BB8C34}' />
    </worksheet>
    <worksheet name='Top 5 Customer in each region'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Top 5 Customer in each region</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0e447it1fkcoky1bmywbq042mqb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0e447it1fkcoky1bmywbq042mqb7'>
            <column datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column datatype='string' name='[Region]' role='dimension' type='nominal' />
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Region]' derivation='None' name='[none:Region:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[rank:sum:Sales:qk:2]' pivot='key' type='quantitative'>
              <table-calc ordering-field='[federated.0e447it1fkcoky1bmywbq042mqb7].[Customer Name]' ordering-type='Field' rank-options='Competition,Descending' type='Rank' />
            </column-instance>
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='quantitative' column='[federated.0e447it1fkcoky1bmywbq042mqb7].[rank:sum:Sales:qk:2]' included-values='in-range'>
            <min>1</min>
            <max>5</max>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.0e447it1fkcoky1bmywbq042mqb7].[rank:sum:Sales:qk:2]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='cell'>
            <format attr='height' field='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Customer Name:nk]' value='26' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='-1' />
                <format attr='maxheight' value='-1' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk] / [federated.0e447it1fkcoky1bmywbq042mqb7].[none:Customer Name:nk])</rows>
        <cols>[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]</cols>
      </table>
      <simple-id uuid='{70862F23-8ED4-48FA-804A-D0438089B199}' />
    </worksheet>
    <worksheet name='Top 5 State by sales'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#000000'>Top 5 States by Sales</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='Orders+ (Sample - Superstore)' name='federated.0e447it1fkcoky1bmywbq042mqb7' />
          </datasources>
          <datasource-dependencies datasource='federated.0e447it1fkcoky1bmywbq042mqb7'>
            <column datatype='real' name='[Sales]' role='measure' type='quantitative' />
            <column datatype='string' name='[State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column-instance column='[State]' derivation='None' name='[none:State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Sales]' derivation='Sum' name='[sum:Sales:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:State:nk]'>
            <groupfilter count='5' end='top' function='end' units='records' user:ui-marker='end' user:ui-top-by-field='true'>
              <groupfilter direction='DESC' expression='SUM([Sales])' function='order' user:ui-marker='order'>
                <groupfilter function='level-members' level='[none:State:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
              </groupfilter>
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:State:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Pie' />
            <encodings>
              <color column='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:State:nk]' />
              <wedge-size column='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]' />
              <size column='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]' />
              <text column='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:State:nk]' />
              <text column='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols />
      </table>
      <simple-id uuid='{A60C1EE7-F4A0-4810-AEE1-E0CFF1D49DB6}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Superstore Dashboard'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1'>Superstore Dashboard</run>
            <run fontalignment='1'>Æ&#10;</run>
          </formatted-text>
        </title>
      </layout-options>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='98120' id='24' param='horz' type-v2='layout-flow' w='99038' x='481' y='940'>
            <zone h='98120' id='16' param='horz' type-v2='layout-flow' w='99038' x='481' y='940'>
              <zone h='98120' id='12' param='vert' type-v2='layout-flow' w='99038' x='481' y='940'>
                <zone h='5758' id='13' type-v2='title' w='99038' x='481' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='background-color' value='#f2f6f7' />
                  </zone-style>
                </zone>
                <zone h='92362' id='3' param='horz' type-v2='layout-flow' w='99038' x='481' y='6698'>
                  <zone h='92362' id='5' param='horz' type-v2='layout-flow' w='99038' x='481' y='6698'>
                    <zone-style>
                      <format attr='border-color' value='#000000' />
                      <format attr='border-style' value='none' />
                      <format attr='border-width' value='0' />
                      <format attr='background-color' value='#f2f6f7' />
                    </zone-style>
                  </zone>
                </zone>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone fixed-size='226' h='10576' id='10' is-fixed='true' name='Card4' w='14440' x='26655' y='7756'>
          <layout-cache type-h='fixed' type-w='cell' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='10576' id='8' name='Card2' w='14440' x='3189' y='7756'>
          <layout-cache type-h='fixed' type-w='cell' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#ddebf0' />
          </zone-style>
        </zone>
        <zone h='10576' id='9' name='Card3' w='14440' x='53791' y='7873'>
          <layout-cache type-h='fixed' type-w='cell' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='10576' id='7' name='Card1' w='14501' x='80686' y='7873'>
          <layout-cache type-h='cell' type-w='cell' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='34783' id='14' name='Category Sales and Profit Comparison' w='29362' x='1143' y='21739'>
          <layout-cache cell-count-w='6' minheight='216' non-cell-size-w='88' type-h='scalable' type-w='cell' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='41598' id='18' name='Sub-Category Quantity by Region' w='33333' x='1083' y='57814'>
          <layout-cache cell-count-w='17' minheight='195' non-cell-size-w='77' type-h='scalable' type-w='cell' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='12456' id='19' name='Sub-Category Quantity by Region' pane-specification-id='0' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk]' type-v2='color' w='5235' x='29603' y='63455' />
        <zone h='41011' id='20' name='Top 5 State by sales' w='22383' x='37004' y='57697'>
          <layout-cache cell-count-h='1' cell-count-w='1' non-cell-size-h='47' type-h='cell' type-w='cell' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='76733' id='21' name='Top 5 Customer in each region' w='37064' x='61913' y='21739'>
          <layout-cache fixed-size-h='534' minwidth='342' type-h='fixed' type-w='scalable' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='34900' id='22' name='State by profit' w='29483' x='31528' y='21622'>
          <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
          <zone-style>
            <format attr='border-color' value='#4e79a7' />
            <format attr='border-style' value='solid' />
            <format attr='border-width' value='1' />
            <format attr='background-color' value='#e6ecf0' />
          </zone-style>
        </zone>
        <zone h='7521' id='25' name='State by profit' pane-specification-id='0' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Profit:qk]' type-v2='color' w='7702' x='53008' y='46416' />
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <layout-options>
            <title>
              <formatted-text>
                <run bold='true' fontalignment='1'>Superstore Dashboard</run>
                <run fontalignment='1'>Æ&#10;</run>
              </formatted-text>
            </title>
          </layout-options>
          <size maxheight='2050' minheight='2050' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='29' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98120' id='28' param='vert' type-v2='layout-flow' w='99038' x='481' y='940'>
                <zone h='5758' id='13' type-v2='title' w='99038' x='481' y='940'>
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='2' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#f2f6f7' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='10576' id='8' is-fixed='true' name='Card2' w='14440' x='3189' y='7756'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#ddebf0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='10576' id='10' is-fixed='true' name='Card4' w='14440' x='26655' y='7756'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6ecf0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='10576' id='9' is-fixed='true' name='Card3' w='14440' x='53791' y='7873'>
                  <layout-cache type-h='fixed' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6ecf0' />
                  </zone-style>
                </zone>
                <zone fixed-size='83' h='10576' id='7' is-fixed='true' name='Card1' w='14501' x='80686' y='7873'>
                  <layout-cache type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6ecf0' />
                  </zone-style>
                </zone>
                <zone fixed-size='277' h='34900' id='22' is-fixed='true' name='State by profit' w='29483' x='31528' y='21622'>
                  <layout-cache minheight='251' minwidth='202' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6ecf0' />
                  </zone-style>
                </zone>
                <zone h='7521' id='25' name='State by profit' pane-specification-id='0' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Profit:qk]' type-v2='color' w='7702' x='53008' y='46416'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='276' h='34783' id='14' is-fixed='true' name='Category Sales and Profit Comparison' w='29362' x='1143' y='21739'>
                  <layout-cache cell-count-w='6' minheight='216' non-cell-size-w='88' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6ecf0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='76733' id='21' is-fixed='true' name='Top 5 Customer in each region' w='37064' x='61913' y='21739'>
                  <layout-cache fixed-size-h='534' minwidth='342' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6ecf0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41011' id='20' is-fixed='true' name='Top 5 State by sales' w='22383' x='37004' y='57697'>
                  <layout-cache cell-count-h='1' cell-count-w='1' non-cell-size-h='47' type-h='cell' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6ecf0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='41598' id='18' is-fixed='true' name='Sub-Category Quantity by Region' w='33333' x='1083' y='57814'>
                  <layout-cache cell-count-w='17' minheight='195' non-cell-size-w='77' type-h='scalable' type-w='cell' />
                  <zone-style>
                    <format attr='border-color' value='#4e79a7' />
                    <format attr='border-style' value='solid' />
                    <format attr='border-width' value='1' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#e6ecf0' />
                  </zone-style>
                </zone>
                <zone h='12456' id='19' name='Sub-Category Quantity by Region' pane-specification-id='0' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk]' type-v2='color' w='5235' x='29603' y='63455'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{DDDFB190-8B78-4845-857E-626072883C08}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Category Sales and Profit Comparison'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e447it1fkcoky1bmywbq042mqb7].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9D712D64-34FD-4F74-8BE8-A40367720556}' />
    </window>
    <window class='worksheet' name='Sub-Category Quantity by Region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Product Name:nk]</field>
            <field>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk]</field>
            <field>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Sub-Category:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{48EDB48E-E88D-48E6-B5BC-367EC8201D7A}' />
    </window>
    <window class='worksheet' name='Card1'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{614F58FE-CC59-481C-B0E0-2C665E531512}' />
    </window>
    <window class='worksheet' name='Card2'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{C82D935A-1FBE-4077-AAB3-116F25529424}' />
    </window>
    <window class='worksheet' name='Card3'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{0D25B866-C7DC-4DED-A021-D1EB3CC278EC}' />
    </window>
    <window class='worksheet' name='Card4'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <simple-id uuid='{D21D7599-5EEF-4E8C-B5E9-4E2D7A2B64D9}' />
    </window>
    <window class='worksheet' name='Top 5 State by sales'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:State:nk]' type='color' />
            <card pane-specification-id='0' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]' type='size' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='entire-view' />
        <highlight>
          <color-one-way>
            <field>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{98688B88-403F-4A83-ABC1-89FCFCA3C0D8}' />
    </window>
    <window class='worksheet' name='Top 5 Customer in each region'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Customer Name:nk]</field>
            <field>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{F25DA3BB-E37A-4913-A40D-72E7EBC8E379}' />
    </window>
    <window class='worksheet' name='State by profit'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='0' param='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Profit:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:State:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{0276F5A8-A6C9-4CCE-8D93-5AFCC07CEAB6}' />
    </window>
    <window class='dashboard' maximized='true' name='Superstore Dashboard'>
      <viewpoints>
        <viewpoint name='Card1'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Card2'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Card3'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Card4'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Category Sales and Profit Comparison'>
          <zoom type='entire-view' />
          <highlight field='[federated.0e447it1fkcoky1bmywbq042mqb7].[:Measure Names]'>
            <bucket-selection />
          </highlight>
        </viewpoint>
        <viewpoint name='State by profit'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Sub-Category Quantity by Region'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.0e447it1fkcoky1bmywbq042mqb7].[none:Region:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
        <viewpoint name='Top 5 Customer in each region' />
        <viewpoint name='Top 5 State by sales'>
          <zoom type='entire-view' />
          <highlight field='[federated.0e447it1fkcoky1bmywbq042mqb7].[sum:Sales:qk]' type='size'>
            <bucket-selection />
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='5' />
      <simple-id uuid='{09A06D20-C333-4483-B28E-6398DD0B5A98}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='25' name='Card1' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAZCAYAAACvrQlzAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAE5UlEQVRoge2ZfUxTVxjGH5fi5rBkIe6DuAVCjIsuM9EiiYpzuOwuS4kbps4FIyqY0Cmw
      6NZlX1xnTXSpSIwrEaJL6qILmWXTJhKEbVlZ6iZ0c5YVJY6uDuJAobHV2sIlefZHW4S2VJl3
      n+nvv9773Pe857nnfc+56TSSRBLZuO+fTuD/RtJQmUkaKjNJQ2UmaajMJA2VmaShMpM0VGaS
      hspM0lCZSRoqM0lDZUYhb7gR9LbWYk+9BefcNyClKJG1TIvdu9di7vSIxgfHET30JhvcNySk
      KLOwbKMIccMCpE0I1YvWfTuwt8kBTyAFyqxl2KzfiXXzU2OHHf0d3x07iEOffYsLAzcgIaTf
      +N67WLcwfWySI72t2LdjL5ocHgRmpGPB6g9QXbEU6WFB244cbD8Vf2ZPVjTi2IbMO1tAGfmp
      Rk3163Vsc/kpkeTwADuMxczTNfMmSVKi01hIodzEjoFhhiQdNJULLDQ6Q8+QpNRDU7Ga5aYO
      hmTD9F5qY6OtL/7A7gZW7baws9fLcFQOdJhYLhSyrjus6TdTm1dMY8cAh0lK/i42lAsU9LZw
      bpPRT7N2DY1OKaEqgqyGunt6GDuslaJKpJUk6aSxoJQN/VGS/gaWFhjpDP+82ayj2mCPE2tq
      9Hz8CotMbpKk3ZDPSot3ouCmlWJ+nHzG013HNVozE0nGI2sPzczOju0hPi+uZzyCWQCAVMxM
      CyAYjNIEgwikzUSomIfQfOICXlSr7rEf+XDReR1Pz5sNIIjBaxlYtCBtoiR1KZ5b7kT7D/5J
      Yvhx+vDnWLTpJTx6l6P+tZuSz4Haino8pFuP+QCATBSWzcFxsRb2qyMAgJGrdtSKxzGnrBCh
      DuWGq/sppA0dgVgiYHlODnKW5EPz5hE4fHcx5ogPfT9/ifqKYjTO3YstuQoAD0Cp/A2uy6NR
      YgUys7PRf20wfqzLZnziKcGm3Cm82j9VS3dE4pCthq8+q6HBNhRTul5bNTUrVFSpVFSt0LDa
      Nr4UrRRVAktqLOy8EtWLE5aelaIqEnM9q7/qDffTcEZ2AwVBR0ukv0t+XulspVGbP9YWoudw
      do9AXXPiDhuNzIZ6aRXVLDaepzfe7UEztQX7eT7aYek89xdoaR4kyT4eLS6g0Rn7uFV8mQcv
      TiEbSyXzDfYEColWMY96W+x1u0HN7afiziIhspa8r2knDHgLH22NOgJFCAZxCwoooitIoYAC
      t8K9dTYWL01Bo6UdEwu0C50/PoaHZ919Pg+mzoTv2iCiW/bthFtw8ns1XsiNvf6pdQWKhLiz
      SMyUX8GkDNKsLWLc6hmjn2ZtHjX6Frr8oWUq+V1s0WsmlrPXSlEQWN7QRb/EsZJXT3LEcTdU
      scrUxkuecDlzmN5LLdRr8m6vsr5WHrV08opfIinR72qhXqOmaI1dhd11hSxNuPVPzjRSrn89
      z2DXkkqclOLdU6PGvhPPAKEDe+0e1FvOjR3sF64qwztbn8cT028/Meo5g8PvG3CsvQ+BFCXm
      raqCQbcSGeHVPdr+IYSq+/H16W0Y9ZxDY90hfPFNJ37xBACkQJm1EKu2VKFiZUbotOD/FU0H
      dmF/kwOeADDj8Vysrhx3P4KvCW+scWDtqbcxlb0ogoyG/p0MoPG1Urg2n4BOJfPH3j3yn/yW
      H+0y4+ziA9j2LzMTAP4Aiuz2ULsBI20AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='25' name='Card2' width='84'>
      iVBORw0KGgoAAAANSUhEUgAAAFQAAAAZCAYAAACvrQlzAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAEbUlEQVRoge2Za0hbZxzGnw5h61zLoLYqK8jyoWOjdFBjwNV4qewMetx0q9Ja6ZHGjklb
      7Zrp6BxmGJnZ/GCGZsMyW7TUVcGNVZt01XYsZYrW7FKnFgVvdZ2xzUITTDo9B/77YOc0OYkx
      njIY5wf58p73/7zPeXhvh2wgIoKMZDzxXxv4vyEHKjFyoBIjByoxcqASIwcqMXKgEiMHKjFy
      oBIjByoxcqASIwcqMWEGuoDpLiOOZachUamEMjEN2SWtGF0IXiU4f0GrTgNGrYRSqYSa0cDY
      44SwXHm6CwYNA7VSCaWagcbYA+eyDjc+Wqz1/eU1Ta3br3ugCSVZ6kVvWSVoGnCLq013wZCr
      Fh+TwuDXGpbYk/V0Y9xDPBHR/Cz1mzhKKv2O5gIVOb6lE6kHqar9N5qdJyLiyTPeTqXMm1Q/
      8qiPvY0Kkzgy9c/SPBHxnmFqOcEQo+8OrEt2aivMIdMQvz6/kxeIS+Lo7LCHeOLJM3yWuCSO
      LkwuE5q/Q51VBymVPUl6bQYdapz0GyusQCfHxsjfvpV08TqyBipyjNGYS0Sr8dCSMVt1GhW3
      +3Sas5IurYBa7AF0R+opp7CNAj0OzS9PfQaGtOaVY7vMWmIMfUu1ky3lVNU5Th5+pe/lhLXk
      4xQKRPg2ul14ELsNUYGKtiig2OzbKMD1wI2YrVEA/oLjfix27/LpFPkK0tVDuPmTR1T2asM3
      2H0kE9Hr8juK/u6dSE9ZOfbmlHTs7O7H6D86B/T44NXn8bSf2L9Icyi5B/B50Rk8W3oYL4Vc
      JGDGUoayn7NxnIkE8BQ2bbqD8SnBp18E4hQK2O87RFXOOzU4ogryhiH5deCeJwbRkT79IqMR
      47kH8ZHFWWegApw9RuRmVsL7znmUJ/tNQXEWRtH6bhbevhKPmi/zoXiUh2rfG+j9uAwdE97F
      g0rwYmbwGi73zgQc/7mcjKCzM2S/oqsrCttiQxZfJMjWEwQXWXUscaZbJLItBoQfaySOLSXz
      H4EPEJEqsuqSSN/t326rZkPUWM3vEJkytGT2PfnmzKTNMNGQSIWke6jbUoFqvI+647sQ4pwE
      hGGcOf099tZWYV/sGpaouxOXelm8pvJv/8qaIpHfHUjYM4jr1pXXJLf1Ogb3JGBH6G7DWfJ/
      oqvDjhxNcuhhAsAtM9pfLECeIkiYd6+huWMQM14BgADvRBcqC77AMx8eg+82OXqxAa7DnER+
      I6DK5eAwFOHcbS8ECPDePocigwNcrsr/QAvCBqK1/uvZg8rEYlzixZ6xqLFVIBmAcPMTMOVP
      wnj1FF4GcLc5H5nGIVHFF4q+RnN+HOCZgKW2Ep9ZBuB8CGzcrsJbxeUo2hu78qXcFryXM4AD
      5tN+QQOzaD2ahR9fv4y6zC0h+wUWL/Z6XQN++P0hNm5PxVG9DvlLt44pNOXtR92IeCpsjQ0V
      yQh3D10NO7UVslRtW8teKQ28rZrYVe6lj5PH8i0vDLehL6EWp+LXeJ1ZN250ts9B++n+NZz8
      0vI3nn4LzzcDjG0AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='25' name='Card3' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAYAAACB6CjhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAC0ElEQVRYhe2YW0gUYRTHf8ZmuJFFF8Ws1DDsQZJwCjRWMskeSggSLTfU1Ae7WCoaSGzm
      BVeSUtICDax9EIuyzAshktFKSbKhCN1E1G2JYaUkVttgHdgezApRcWtohPYPAwPnnO/7zZ/v
      OwfGw+l0OvmPtUxpAKXlNkBpAKXlNkBpAKXlNkBpAKXlNkBpAKXlNkBpAKXlNkDuBR2WTvTH
      NGgN5kXlmw1aBEGY9Wh/y5AY7zOQFx9NhCAgaGJJ0xsZm72QNE6fIZtDEYUYXeBVuZC7sBwW
      Oq+cp+y5L/tC1iy6zDwsklhrIj987rjNWEJytYpzFe2UB6nBLvKubQAR8AGmDWqgWHcb654o
      /KZcw5btBJgf3sQklNHeXEXyDu/FVjEyFMLWwPnigzTWjHGiRsf+IDUqQKX2IzThAGE/c3pp
      MMDx+g4aC2LY6CK3bCcgILGYAperzAzbQklcN0/41SPubo6j1XehNSLJqop0eecZKdsEP1oY
      FW+RPHP3NbEczaulR5QA+Dw6zAb/ZXRVniI+OgJBENDEpqHvEpFkQpCvB/yJ/LUYTL8anmQX
      6b9XxoXUEjo6ipictPGh5xnjZ3OpPx2Mt6eEfeQxlzJTqVzdTn743+MvqTGoUvshpFRTlzQE
      QMC27bBFQ7wmGG9PABXqoDgu1yXRf+cJ32TYU1EDvtpscxxlCasoTr+G7Ubz4gFt1ll1rwcQ
      fdbjJQODogZ8ac3hcHYt3UM2HACOMUyGHHRPo6cTVsaQmTlFzZkKusccgIR9pJWiG59IT5hn
      brooD3n+CpsxaI9Q/X7u6MGrJoqiQOotJ1a3gsqOnB9jzIGl8zr62hb6RieYWr6KwJ2J5JZm
      ELl25n47GGwppaSyk7cTU3ht2ktG8UVSZkatsRAht33ujUOyaGpIIWABcpkMWIysNJ1MZzij
      WZbmJZf+2RWQ3tzn5a5r5Cyhjwf4Djt37c1aCp5vAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='25' name='Card4' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAZCAYAAACB6CjhAAAACXBIWXMAABJ0AAASdAHeZh94
      AAADrUlEQVRYhe1YUUxTZxg9CtOp1QdelmUxLnsxmsw4rzMudkK30IdWw1CYBgPasSyQOONK
      uqCGGklck8bAVBK6TJOSjK01ZVlqGhmGJWDc0tiQEUAGBYJjEdiA2Uot9TY5eyiLvax/Ichy
      H+x5/HK+757/fPf7/tuuIkm8wFittgC1kTFAbQFqI2OA2gLURsYAtQWojYwBagtQGxkD1Bag
      Nl54A7KXmxgO3sT1+mbc6hnCTBTAuhzsMFhwoSofm9cAeNCEY4evYiBlthF1gQvYL6gdH/8J
      uoOfI4p1yNlhQPVFC957NSG18/xumH2p87Z+2oLm41uA+Dh+aW7E1zfuoH/yMWS8hI2v78OJ
      c2dx7K0c5aG5LMi8e6WKjs4gZyJyIhIZYVttEbWWVs6mywzYaTT7GBIRQj6atUWMyCTlCEfa
      almkNdMnTCDJCXoqitnQl9DCURdrvvCyZyzEGEkyxsl7Tp7UF9IxoMxcpgECyO08K1nZISTM
      stVipD0gixk+M3U2f3JR+m06mn1pbB1wsLjCw4lF5A1f/5AlzlFFbEV3QHywH/07t2OriDD4
      Db6aKUWZJJ68tRoN5OicIjYXlaHRrBVkRPDjte+xy1SAV9KqC+O3vkd4c9tryvAipi0BMiMz
      Qd5z1/JowRn6Hoq6O8sO6we0+cXdT5QbprPM+GwEvBYay5wcFqWNOllS7hJ3PxbiWM9tOk4W
      8CNH939G77kMGHWWUJIkSpJEw2k3e0NpDjfhYnmhgwNixjPEgkl1WxiMiYgy/TY9La2pxqOD
      1vkaUm4pL7WPMVWZFd4B3fzyQAU9UwviEx5WFDewb5Hmk2TAruMpr7JPIe8p6uyBhQ9jwG6k
      Of12XLTOyn4HZGuwcf0kpqaTg3Hc97iBI0XYvoRLNzYXRXZWliKWlZWN6FxMSQy34duOXJTo
      Ny1Z3voNGoT/mkLyhlmmAT/j6if1uNn7B8JPE5H4k3EEmurhlt/Hu28kUSPtcHp3wVSQfkX9
      iz2GQ+i9XI1E2af4M9CE6su9OGTYo+ANfncNodIypNqnD9xWWJvuYOjvJ4jP1wkP3YatsRO5
      ee/g5WTykt8fBWL8va2RVSYD8/bOz5k2n6YaF7sVb6TMvoZClrvEF5Tst1Gnr+OvSTnTXS5q
      JYmSpGW+qYaurmkqpifko1lvo2ifytNddF2s5JF87fwu2cu8w5Wsa3/IhSmrSDX/Fp9ES2U5
      Rj7+AZY0V+P/CVV/C8Tve+B/+wo+U+nwAPAPBogLtnL1gW8AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Category Sales and Profit Comparison' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='State by profit' width='192'>
      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
      /6QQvfaJYRukAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Sub-Category Quantity by Region' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Superstore Dashboard' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='Top 5 Customer in each region' width='192'>
      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
      cQzA4aXm/wc1UPcHXGFC7wAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Top 5 State by sales' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAUlElEQVR4nO3daXBdZ33H8e855+73arvaF1u2JEvyKllek5AJTRr2MBOWAQKUQmCm7bTN
      i7bQKVAYpgzdCCQwQDNDKaFD6QxLKS0hgSS1HceObcWyLctaLFmyZMvat7vfe87TF4qdOLa1
      +UpX8vl/XthjWTrPXzPP757lOc/zaEophRA2pWe6ACEySQIgbE0CIGxNAiBsTQIgbE0CIGxN
      AiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIg
      bE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxN
      AiBsTQIgbE0CIGxNAiBsTQIgbE0CIGxNAiBsTQIgbE0CYHPt59qJjfZz+FQnXe0dpN70/5HR
      ywzNRAEYHR2+6TEuDw0tc5XLR1NKqUwXITLn2Esv4Qz4CceSaKkEG8oLOH76PJurS+non6Cp
      qojDnf2UF5fhNWIkIiGmJqapbdhDa2sbTo+T9tZTvP3t76Dn/AV8OYU4U2NMzcS5+/cfIugz
      Mv0rzknOADZXvS6bs31T5LlMEpqX7p5exrp7COsBshwxBkei7Np/Lx4jSTg8g9OXw1t21dHR
      MUDDXfdgoNiyo4nygE5JzXb0ZBhvdj67t1cxEzMz/evNS84ANmem4vT0DVKa52bK9ENokIGh
      MBurymjv6KZx+1Y0j59EZBozlcBwuMjxGExGUzz/3LO488rYW19OWM8iOtJHVkk12V4dn0vH
      cubgd6/uz1gJgFgSZSbp7u6htLIKv9uZ6XKWTAIgbM2R6QLE6qHMJId+9UP8ux4hP9pNe1cn
      ubmVXBq9gi+QyzsfeAt9Hac51zfM7n13Mz3QTvOFQe7aXMXRlot84P1vz/SvsGir+wJNrCjN
      cLK7qQHTUhQVFTM5Pk1eUQ6xWIyrFwqtnZ04SXKhp4O+CZOgV6O8ajNFWd7baluhsJRFykqR
      MBNEkhEm45OMRqaYCCeIJFIkUhYp08JSinRdt8gZQFxjpeKcOtVKl0ORt9HH+o3raG9pI7+w
      iHg0xsTEBBVFJYzHUkRCMRwqyZmuXjZUdtDW3kbdniaK8wILaiucDNM10cX5yfP0TPZwceYi
      Q5EhxqJjzCRmiJkxAHzxfQz1PAyA12mQ43US9Lsoz/WyPt9HbXGA2uIsNhVlEfAsvjvLPYC4
      RimL0MwMSjPwuJ3E40kCAT/RSBiHy01/fz9VGzcQCUfw+v3omkYqlSKVTBBPJPH6AricN3/u
      H06GOTt6liODRzg2eIzzk+eJpqIo5u5+bwzArWiAz2VQX5rNvo1B7qstZFt5Dn73/IGQAIhl
      oVAkzSTHrhzj1z2/5sjgEUajo4s+zkICcDNFWW7uqy3kPQ1l3FWVj8tx86t9CYBIK6UUg+FB
      ft71c37Z/UuuhK/c1vGWGoA3Wpfn5X1NFXxozzrKcq+/V5EAiLRQStE12cXTZ5/mmd5nSJiJ
      tBw3HQG4yuPUeW9DGZ++t4pNRQE0TZMAiNujlGIgNMB3W77Ls73PkrDS0/GvSmcArvI4dN7T
      UMZjD2ySAIilCyVD/KD1B/yo7UdEU9FlaWM5AnCV323IY1CxeEopDl8+zFePfpWB0ECmy1my
      cNyUAIjFCSVCfPPVb/LTzp9iqtX/tud8JABiwbomuvjcwc/RNdmV6VLSRgIg5qWU4tneZ/ny
      kS8TToYzXU5aSQDEnCxl8f0z3+c7Ld8hpd48YXLtk5fhxK0pC6vjV5zu/MUd2flBAiBuxUpB
      289wDBzlaznbafQUZbqiZSEBEDeyTGj/JQy+CkBA0/lGsImNrtwMF5Z+EgBxPaWg69dw+cR1
      Xy7QHHwruJsChy9DhS0PCYB4nVJw8SXof/mm/11peHiyYB9ZhnuFC1s+EgDxupE2OP+bOb9l
      m+Hn7/N349bujAeIEoA1yrJMEokEyVSans6ER+DcL0BZc36bBtzrzOPz+TvR0NLTdgZJANao
      ieEBnvrO92g+28XoYD8DQ+NMTU0TCs0QnhrjTFsnlpng9OkzxFNzd2rMJLT+BBY4yKUBD7uL
      +bPgjjUfgjvjPGZD+SWV7Gzcyc6tVTz91HdJ6kF+7+5aekYUW8p9HDt4gLHBBsaTKdZV1eIO
      3OK6XSnoeR5mLi+6hk95KxjNjvLj6c7b/G0yR84Aa5iu62iaTlFxCY27GoglwK0luDAwQHFJ
      EY5APsbMIH3DU7c+yFTf7I3vEhho/EXWJh4MVC7xN8g8mQ9gZ2YSTnxvSZ/+bxRD8UfjzTRH
      b2/6480s53wAkDOAvQ0cue3OD+BB4/G8RmrdwTQUtbIkAGuMUhY9F3rAjHPohed59rmDxOJh
      jhw9du1mNx6ZYuDyGGYiwqEDB5gKx+k5d4rWzt7XF5RKhKD3QNrqCmoOvhncTakzK23HXAkS
      gDUmNjPOoWPNYLi59/778Xnh9CvHqakq5cSrszejly6dp/3UBV49+jI1W7fwyuEXOXdpmpHe
      s8RNNXvj2/t/kIyktbZ1uosn8/esqYEyCcAa480uoLKsEIDp4T4C+ZWgu8kL5qGnZiekV22q
      xWXoZOfmcObkSTyBHIiMMRHXZjt/fBouHV+W+uoMH1/P34tXXxsrRksA1pjJ4X76LvTR0tbF
      0FiErfXr2VhZyHPPHaRiYzHtXb2cfOUEvZfPY+puQCMnJw+f14PP58fQNeg/DGlatuTNNOAu
      Zw5/G2zCoa3+7iVPge4gZjJGUrnwuOboeMkIvPz4gge9lkoBT0cH+Ofxlts6jjwFEgtmOD1z
      d36AK6eWvfPD7Jng494K/jB3y7K3dTskAHai1A2vOS8nHXjMv5F3BzauWJuLJQGwk5lBCKV/
      sGouDjS+lL2Z/b6yFW13oSQAdjJ0at63PZeDV9P5em4jm90FK972fCQAdqEsGDmXseazNZ0n
      gk2Ur7KBMgmAXUTGIDKS0RJKdRdP5u8lz7i97ZTSSQJgF+PnM10BALWGl28U7MG3SgbKJAC2
      oGCiJ9NFXNPkyObv8nevioGyzFcglp9lwvSlTFdxjQY86MrnL4OZn1YpAbCDRAjic0yKyZBH
      PKV8JsMDZRIAOwgNZeTx53w04I/9G3g4uyZjNUgA7CCc2ac/c3Gg8YWsOt7iL89I+xIAO4iO
      ZbqCObnQ+MecHWz3FK542xIAO4hNZrqCeWVpBt8INrFhhdcflQDYQSKU6QoWpFhz8kRwN/nG
      yq0/KgGwg8Ta2dWlyvDwRMFe/LprRdqTANzplLVss7+WS4MjwNfy96zI+qMSgDudslblI9D5
      vNWVx18HG9GXebRYlka80632zm+Zswt0mYnX/k6CUmgavE93Ml60l28NOJmJJ5eleQnAnU7T
      SevbBkrNbp9kma//rUxIxSGVuL4jp+Kv/TsBqSRYyRu/T5mzx0TNTiSe/YO4p5CWHf9AYd49
      fLhpmn89eh5zGaavSwDudJoBlvVaR7VmO9vV+4KrHfRa50yAebWDvtaJzTd37NRsp73a8S2L
      q502HRQwk7eDYzseZ8a7HoDNRdm8e0s5/302/bvSSwDudJoGbf8LU5dmP7HN5Kq9LFLA5XXv
      59X6L5J6w6NQTdO4r6aYmXiSF88PpbVNCYAdOLyr/lGoZXg4t/lzdJZ/ZPay7U10TeOhrRXM
      xJOc6B9PW7vyFMgOskoyXcGc4t4Sju75Pp3lj9y081+laRofbNhAfVF22tqWANhBdkWmK7il
      yfzdHNj/nwzl7pm9XJuHy6Hz8d1VrMtNz2ixBMAO8qszXcENFBoXN36cg7t+QNhduqif9bkc
      fGb/Jgr8t78IrwTADgo2ZbqC65gOH2d2fJXm2s+/tn7p4mV5nHx6fw3ZntubWywBsIPCzbOP
      Q1eBmK+cI3v/je6yD8x5vb8QxVlePrm3Go9j6ceRANhBoAhyMjPh5CoFjBXew4t3/YyR7Ma0
      HXdDMMAf7KnGoS9ttE8CYAeGC8p2Zqx5pRn0Vj/K4Z3/QsyZ/m2U6ouy+UBDJUvJgATADjQN
      Ku/JSNOmw09L4z/RUvNZzGV6xVnTNPauL+Cdmxd/lpOBMLuoeWDFm4wENnKs8UkmAnXL3pam
      wQObSgjFUxzoXvhosZwB7CKvCgpqV6QpBQyXPMCBff+xIp3/Kk3TeGhrOU0VC7/MkgDYha5D
      3buWvRml6XTX/ilHdjy5LNf78zF0nQ/t3MCmwoUtwisBsJOtDy/r49CkK5fmpm9xpurPsTK4
      9qfL0PnEnmoqcuYfLZYA2EnpDihenpXYQjn1vLTvx/QXPrgsx18sv8vBp/bXzDtaLAFYJfrO
      t/HCgcPEkuaifm54dHTO/x8ZHX39bX1Nh6ZPLK3AW1DAUNk7OLDn35n0Z26Ft5vJ87p4dH8N
      ftetn/XILpGrxHMHD/LWpq28fKoDRypOWdVmxi92EcbL+uIAfX0Xqd3eRPvpFmrra8BVgBUb
      o723j7rK9eT6PUyGYnR1dtGwq5HWM63kFlWQ7XeR41ScbOvm7vvux5+cgG/vnt0v4DZZupOu
      2sc4V/koapWMNN9Mz9gMTx3pIp66cR6EnAFWidjkMAdebsYfC9M3EaK3vxdTD5DvUPRPzHDv
      WxvpPdOHiUYSD32dx7l0ZXbBq+FLlzh9rot4LIQVH+bEibPkrqsnEZmku6+P8YlxkmM9nOyb
      Am8eNH70tutNuPM5vvt7tFV+ZlV3foCqYBYf21V109FiCcAqUVmzhQff9jYa9zWR7XRQVlJK
      QUGQnGCQgmA+uu4hLz8Hh2YSTypUJMT6ujqKCwrYVreehJGFrpK4fLkUFgQJZvkIBoMUFxSQ
      Sibx5hSS6zVmH5jv/xNwL32rouncbRza/xMuB+9d0CvMGafB1pIc3r9j/Q3To+USaA1SVpKW
      ljYadzYsrf8pBc9/BV56fNE/emnd+zhZ/0WShn8JDWeWUornOgb5Tfvla1+TANhVeBS+vQei
      C5teaBlu2us/S2fFR1GrYGeXpVJK8Ysz/RzqGQbkEmjVUsqi5aVn6B6JMjVyid8dOoqykhw5
      +AJnOi4AMNjTyv/85rcMjk1z7MXfMTAaoq/zLM8+8wzDU9G5G/AXwH1/taBa4t4SXtn9FB0V
      H1vTnR9mR4vfu7WChrI8QAKweilFRVE2o6EkDl8uDmKMdZ+lezhELB4HYPTKGJqmMAyNwrwg
      oZkYFdX1VBZnMxWJzd/G7kehfNec3zIZbOLgvp9wJe+utXG9vwAOQ+eRpg1U5wckAKuVphv4
      vLPbifr9s9fbhstFdf12ImODAFRubeD+u5poPduGz+8BoPN0M0ZBNTUlefM34nDDu/4JjBtH
      bRUa/ZUf4eDuHxLyrM5d3m+Hy2HwyX01EoDVykrFOH5ukMne03S2nWZmaoYZVyGB+DBlVXU0
      N79KKh7i6Kvn2NuwmdPdfVzs7SJumVxoP83IVGRhDZU1wd2PXfcl0+GjdftXaK7/0pKnLK4F
      fpdDboIFsyvE/fAh6H+FuLeU4zufYCSr4Y655JmLBEDMGu9h/L++wLGavyHqLLBF5wcJgHiD
      K+NRXumaxrJRj5B7AHFNcZ6HLesCmS5jRUkAxDWaplFT5qemdOX26Mo0CYC4jgZsXR9gQ5E3
      06WsCAmAuIGuaezYkEWlDUIgN8HilpRSnOmbofvKPK9VrGESADEnpRRdgxHa+kPciT1FAiDm
      pZTi8nickz3TJM07q7tIAMSCzURTHO+aYiqSynQpaSMBEIuSNC3O9YfpGYrcEZdEEgCxaEop
      RqYSnOqdIRRb3CoWq40EQCxZylR0DYbpuhzBXIPvTzh0TQIgbo9SimjCon0gRP9obE28R6Tr
      sC7fS32FXwIg0kMpxUzUpPtKhP7R2Ko8Ixg6rCvwUlPqI+Ax0DQ5A4hlEI2b9I1E6RuJEYln
      /h7B59apLPRSWejF675+DSMJgFg2lqUYmU5waSzG0FSCWGLldqj3unSKclxUFHgoyHKh32L7
      GAmAWBEp02IynGJ4KsHIdILpSIpUGgfVHIZGts9BYbaLohwXuX4nDmP+ST0SAJERKdNiJmoy
      FUkRiqUIRU2iCZN40iKRsjBvcrIwdHA6dDxOHa/LwO8xyPY6yPY5yPIaOIzFv9spARCrwmwv
      nO2K6rV/W5bCUqBroOsamsa1pQ21NE3ZlACItEgl4li6A5SJy3mLzfCURSJp4jA0LPTrPrHN
      VApNN255rb5cZJM8kRY97SfoGHGS5Ypw7749NJ/qoL56I+5sH6PD0/i9TnJzAxw8eJiiHDfr
      Nm+no7WNnU0NTI5e4WLfMOvranEaOsGcpS/cu1hyBhBpcb69hZGJKBfHpijRo1yZClFcVkI0
      4iRmQGm2j/379zLQfoyOKS++2DD1O7bScqKN8XiSXRsL+e2JDj7y4Q8ScK/c57LMCBNpYRgO
      6rZuZ+hiH4XFJWTnl7Jl+15GR/upDpgYwdk9fPOCeRQWBinIz+Ho0RPkFhRQV1+Hw+3nrp31
      XBwYXtG65QwgbE3OAMLW5CZYpE1sZpwjx09St2MPPmuaGeWjOMvgleZWdu3dh8/toK/rLJcn
      TSqLvbS2X6B4XTXFfkXfaIy9Tdtu2MFluckZQKSN7vTS1LiNM6daGRsaoOfSEKeaW9i2rZqT
      LZ0AnO2+iDM8gFFQw76GTSgrxQuHjqLrBpmYYSMBEGnjdDo4d66DQMDD+soNGDqgOQlkBdDM
      2WmULivKWMQklUzS1nmRzRuLCRSuR0WHmYqu/ItzEgCRNuNDl5iOxMjKzqa5+ST959spqyzn
      t8+9xIbqEto6LpCTk4fm8JLrsQgWr8ftzWFdjkYo6SLgWfndJuUpkFgRlpkgpRy4HKvrM1cC
      IGxtdcVRiBUmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYB
      ELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELYmARC2
      JgEQtiYBELYmARC2JgEQtiYBELYmARC2JgEQtiYBELb2/5vsvGQAWYwIAAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
